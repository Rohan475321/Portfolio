{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rohan\\\\OneDrive\\\\Desktop\\\\Porto\\\\src\\\\components\\\\Projects\\\\Projects.js\";\nimport React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport ProjectCard from \"./ProjectCards\";\nimport Particle from \"../Particle\";\nimport leaf from \"../../Assets/Projects/leaf.png\";\nimport emotion from \"../../Assets/Projects/emotion.png\";\nimport editor from \"../../Assets/Projects/codeEditor.png\";\nimport chatify from \"../../Assets/Projects/chatify.png\";\nimport suicide from \"../../Assets/Projects/suicide.png\";\nimport bitsOfCode from \"../../Assets/Projects/blog.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Projects() {\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    className: \"project-section\",\n    children: [/*#__PURE__*/_jsxDEV(Particle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"project-heading\",\n        children: [\"My Recent \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          className: \"purple\",\n          children: \"Works \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"white\"\n        },\n        children: \"Here are a few projects I've worked on recently.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        style: {\n          justifyContent: \"center\",\n          paddingBottom: \"10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 4,\n          className: \"project-card\",\n          children: /*#__PURE__*/_jsxDEV(ProjectCard, {\n            imgPath: chatify,\n            isBlog: false,\n            title: \"Netflix Data Analysis\",\n            description: \"This project is an end-to-end data analysis on Netflix content from 2008 to 2021. It involves data cleaning, exploration, visualization, SQL-based querying, and a touch of machine learning. The project integrates tools like Python, SQLite, Excel, and scikit-learn.\",\n            ghLink: \"https://github.com/Rohan475321/netflix-data-analysis.git\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 4,\n          className: \"project-card\",\n          children: /*#__PURE__*/_jsxDEV(ProjectCard, {\n            imgPath: bitsOfCode,\n            isBlog: false,\n            title: \"Supermarket Sales Analysis\",\n            description: \"Supermart Grocery Sales \\u2013 Retail Analytics An end-to-end data analytics project analyzing grocery sales trends using Python. Includes data cleaning, EDA, visualizations, and a Linear Regression model to predict sales. Built with Pandas, Seaborn, Matplotlib, and Scikit-learn.\",\n            ghLink: \"https://github.com/Rohan475321/Supermarket-Sales-Analysis.git\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_c = Projects;\nexport default Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["React","Container","Row","Col","ProjectCard","Particle","leaf","emotion","editor","chatify","suicide","bitsOfCode","jsxDEV","_jsxDEV","Projects","fluid","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","justifyContent","paddingBottom","md","imgPath","isBlog","title","description","ghLink","_c","$RefreshReg$"],"sources":["C:/Users/Rohan/OneDrive/Desktop/Porto/src/components/Projects/Projects.js"],"sourcesContent":["import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport ProjectCard from \"./ProjectCards\";\r\nimport Particle from \"../Particle\";\r\nimport leaf from \"../../Assets/Projects/leaf.png\";\r\nimport emotion from \"../../Assets/Projects/emotion.png\";\r\nimport editor from \"../../Assets/Projects/codeEditor.png\";\r\nimport chatify from \"../../Assets/Projects/chatify.png\";\r\nimport suicide from \"../../Assets/Projects/suicide.png\";\r\nimport bitsOfCode from \"../../Assets/Projects/blog.png\";\r\n\r\nfunction Projects() {\r\n  return (\r\n    <Container fluid className=\"project-section\">\r\n      <Particle />\r\n      <Container>\r\n        <h1 className=\"project-heading\">\r\n          My Recent <strong className=\"purple\">Works </strong>\r\n        </h1>\r\n        <p style={{ color: \"white\" }}>\r\n          Here are a few projects I've worked on recently.\r\n        </p>\r\n        <Row style={{ justifyContent: \"center\", paddingBottom: \"10px\" }}>\r\n          <Col md={4} className=\"project-card\">\r\n            <ProjectCard\r\n              imgPath={chatify}\r\n              isBlog={false}\r\n              title=\"Netflix Data Analysis\"\r\n              description=\"This project is an end-to-end data analysis on Netflix content from 2008 to 2021. It involves data cleaning, exploration, visualization, SQL-based querying, and a touch of machine learning. The project integrates tools like Python, SQLite, Excel, and scikit-learn.\"\r\n              ghLink=\"https://github.com/Rohan475321/netflix-data-analysis.git\"\r\n            \r\n            />\r\n          </Col>\r\n\r\n          <Col md={4} className=\"project-card\">\r\n            <ProjectCard\r\n              imgPath={bitsOfCode}\r\n              isBlog={false}\r\n              title=\"Supermarket Sales Analysis\"\r\n              description=\"Supermart Grocery Sales â€“ Retail Analytics An end-to-end data analytics project analyzing grocery sales trends using Python. Includes data cleaning, EDA, visualizations, and a Linear Regression model to predict sales. Built with Pandas, Seaborn, Matplotlib, and Scikit-learn.\"\r\n              ghLink=\"https://github.com/Rohan475321/Supermarket-Sales-Analysis.git\"\r\n              \r\n            />\r\n          </Col>\r\n\r\n          {/* <Col md={4} className=\"project-card\">\r\n            <ProjectCard\r\n              imgPath={editor}\r\n              isBlog={false}\r\n              title=\"Editor.io\"\r\n              description=\"Online code and markdown editor build with react.js. Online Editor which supports html, css, and js code with instant view of website. Online markdown editor for building README file which supports GFM, Custom Html tags with toolbar and instant preview.Both the editor supports auto save of work using Local Storage\"\r\n              ghLink=\"https://github.com/soumyajit4419/Editor.io\"\r\n              demoLink=\"https://editor.soumya-jit.tech/\"              \r\n            />\r\n          </Col> */}\r\n\r\n          {/* <Col md={4} className=\"project-card\">\r\n            <ProjectCard\r\n              imgPath={leaf}\r\n              isBlog={false}\r\n              title=\"Plant AI\"\r\n              description=\"Used the plant disease dataset from Kaggle and trained a image classifer model using 'PyTorch' framework using CNN and Transfer Learning with 38 classes of various plant leaves. The model was successfully able to detect diseased and healthy leaves of 14 unique plants. I was able to achieve an accuracy of 98% by using Resnet34 pretrained model.\"\r\n              ghLink=\"https://github.com/soumyajit4419/Plant_AI\"\r\n              demoLink=\"https://plant49-ai.herokuapp.com/\"\r\n            />\r\n          </Col> */}\r\n\r\n          {/* <Col md={4} className=\"project-card\">\r\n            <ProjectCard\r\n              imgPath={suicide}\r\n              isBlog={false}\r\n              title=\"Ai For Social Good\"\r\n              description=\"Using 'Natural Launguage Processing' for the detection of suicide-related posts and user's suicide ideation in cyberspace  and thus helping in sucide prevention.\"\r\n              ghLink=\"https://github.com/soumyajit4419/AI_For_Social_Good\"\r\n              // demoLink=\"https://www.youtube.com/watch?v=dQw4w9WgXcQ&ab_channel=RickAstley\" <--------Please include a demo link here\r\n            />\r\n          </Col> */}\r\n\r\n          {/* <Col md={4} className=\"project-card\">\r\n            <ProjectCard\r\n              imgPath={emotion}\r\n              isBlog={false}\r\n              title=\"Face Recognition and Emotion Detection\"\r\n              description=\"Trained a CNN classifier using 'FER-2013 dataset' with Keras and tensorflow backened. The classifier sucessfully predicted the various types of emotions of human. And the highest accuracy obtained with the model was 60.1%.\r\n              Then used Open-CV to detect the face in an image and then pass the face to the classifer to predict the emotion of a person.\"\r\n              ghLink=\"https://github.com/soumyajit4419/Face_And_Emotion_Detection\"\r\n              // demoLink=\"https://blogs.soumya-jit.tech/\"      <--------Please include a demo link here \r\n            />\r\n          </Col> */}\r\n        </Row>\r\n      </Container>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Projects;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,GAAG,EAAEC,GAAG,QAAQ,iBAAiB;AACrD,OAAOC,WAAW,MAAM,gBAAgB;AACxC,OAAOC,QAAQ,MAAM,aAAa;AAClC,OAAOC,IAAI,MAAM,gCAAgC;AACjD,OAAOC,OAAO,MAAM,mCAAmC;AACvD,OAAOC,MAAM,MAAM,sCAAsC;AACzD,OAAOC,OAAO,MAAM,mCAAmC;AACvD,OAAOC,OAAO,MAAM,mCAAmC;AACvD,OAAOC,UAAU,MAAM,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,SAASC,QAAQA,CAAA,EAAG;EAClB,oBACED,OAAA,CAACZ,SAAS;IAACc,KAAK;IAACC,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC1CJ,OAAA,CAACR,QAAQ;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACZR,OAAA,CAACZ,SAAS;MAAAgB,QAAA,gBACRJ,OAAA;QAAIG,SAAS,EAAC,iBAAiB;QAAAC,QAAA,GAAC,YACpB,eAAAJ,OAAA;UAAQG,SAAS,EAAC,QAAQ;UAAAC,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClD,CAAC,eACLR,OAAA;QAAGS,KAAK,EAAE;UAAEC,KAAK,EAAE;QAAQ,CAAE;QAAAN,QAAA,EAAC;MAE9B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACJR,OAAA,CAACX,GAAG;QAACoB,KAAK,EAAE;UAAEE,cAAc,EAAE,QAAQ;UAAEC,aAAa,EAAE;QAAO,CAAE;QAAAR,QAAA,gBAC9DJ,OAAA,CAACV,GAAG;UAACuB,EAAE,EAAE,CAAE;UAACV,SAAS,EAAC,cAAc;UAAAC,QAAA,eAClCJ,OAAA,CAACT,WAAW;YACVuB,OAAO,EAAElB,OAAQ;YACjBmB,MAAM,EAAE,KAAM;YACdC,KAAK,EAAC,uBAAuB;YAC7BC,WAAW,EAAC,0QAA0Q;YACtRC,MAAM,EAAC;UAA0D;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAElE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eAENR,OAAA,CAACV,GAAG;UAACuB,EAAE,EAAE,CAAE;UAACV,SAAS,EAAC,cAAc;UAAAC,QAAA,eAClCJ,OAAA,CAACT,WAAW;YACVuB,OAAO,EAAEhB,UAAW;YACpBiB,MAAM,EAAE,KAAM;YACdC,KAAK,EAAC,4BAA4B;YAClCC,WAAW,EAAC,0RAAqR;YACjSC,MAAM,EAAC;UAA+D;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEvE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OA8CH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEhB;AAACW,EAAA,GAlFQlB,QAAQ;AAoFjB,eAAeA,QAAQ;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}